{"model":{"opTime":1569234710,"supervised":0,"preprocess":1,"featureSelect":0,"classifier":0,"regressor":0,"cluster":0,"timeSeries":0,"mining":0,"pythonClass":"mine_tf_pool2d","pythonClassImport":"import tensorflow as tf","pythonClassDefine":"class mine_tf_pool2d:\n    def __init__(self):\n        self._params = {}\n        self.vars = {}\n        self.out = None\n\n    def get_params(self, deep=True):\n        return self._params\n\n    def set_params(self, **params):\n        for (k, v) in params.items():\n            self._params[k] = v\n\n    def fit(self, data, y=None):\n        return self\n\n    def transform(self, data):\n        return data\n\n    def __getstate__(self):\n        return self._params\n\n    def __setstate__(self, state):\n        self._params = state\n\n    def build(self, in_node, y_true, feed_dict_train, feed_dict_test):\n        kernel_width = int(self._params.get('kernel_width'))\n        kernel_height = int(self._params.get('kernel_height'))\n        stride_width = int(self._params.get('stride_width'))\n        stride_height = int(self._params.get('stride_height'))\n        padding = self._params.get('padding')\n        pool_type = self._params.get('pool_type')\n        lrn = self._params.get('lrn')\n\n        if pool_type == 'avg':\n            self.out = tf.nn.avg_pool(in_node, ksize=[1, kernel_width, kernel_height, 1], strides=[1, stride_width, stride_height, 1], padding=padding)\n        else:\n            self.out = tf.nn.max_pool(in_node, ksize=[1, kernel_width, kernel_height, 1], strides=[1, stride_width, stride_height, 1], padding=padding)\n\n        if lrn is not None:\n            items = lrn.split('_')\n            lrn_depth_radius = int(items[0])\n            lrn_bias = float(items[1])\n            lrn_alpha = float(items[2])\n            lrn_beta = float(items[3])\n            self.out = tf.nn.lrn(self.out, lrn_depth_radius, bias=lrn_bias, alpha=lrn_alpha, beta=lrn_beta)","desc":"tf 二维池化","inputParams":[{"name":"kernel_width","valueSet":"I>0","defaultValue":"","candidateValues":"","desc":"池化窗口宽度","option":0},{"name":"kernel_height","valueSet":"I>0","defaultValue":"","candidateValues":"","desc":"池化窗口高度","option":0},{"name":"stride_width","valueSet":"I>0","defaultValue":"","candidateValues":"","desc":"步长宽度","option":0},{"name":"stride_height","valueSet":"I>0","defaultValue":"","candidateValues":"","desc":"步长高度","option":0},{"name":"padding","valueSet":"'SAME' 'VALID'","defaultValue":"","candidateValues":"","desc":"是否补零","option":0},{"name":"pool_type","valueSet":"'max' 'avg'","defaultValue":"'max'","candidateValues":"","desc":"池化类型","option":1},{"name":"lrn","valueSet":"str","defaultValue":"","candidateValues":"","desc":"局部响应归一化。四项值下划线分隔：depth_radius bias alpha beta","option":1}],"studyParams":[],"useExample":""}}